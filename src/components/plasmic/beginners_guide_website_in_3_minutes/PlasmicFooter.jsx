// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7268zCZ6kAw6aCYdiP2nzq
// Component: 9OA69trFNc0m
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { useScreenVariants as useScreenVariantso1EIcjvXtqJ1 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: O1eICJVXtqJ1/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7268zCZ6kAw6aCYdiP2nzq/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: 9OA69trFNc0m/css
import FacebookIcon from "./icons/PlasmicIcon__Facebook"; // plasmic-import: m19VbK9R15JL/icon
import group11PngAjmiXiFRilGg from "./images/group11Png.png"; // plasmic-import: ajmiXiFRilGg/picture
import twitterpngOCmBfwqJpCYn from "./images/twitterpng.png"; // plasmic-import: oCMBfwqJpCYn/picture
import linkedinpngSYuuOlmJn6Oy from "./images/linkedinpng.png"; // plasmic-import: SYuuOlmJn6OY/picture
import image14De4VmsG29EdF from "./images/image14.png"; // plasmic-import: De4VmsG29edF/picture

createPlasmicElementProxy;

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

const $$ = {};

function PlasmicFooter__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantso1EIcjvXtqJ1()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <Stack__
        as={"section"}
        data-plasmic-name={"links"}
        data-plasmic-override={overrides.links}
        hasGap={true}
        className={classNames(projectcss.all, sty.links)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__iAcin)}
        >
          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__sHzRc
            )}
            href={"/"}
          >
            {"Home"}
          </a>
          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__atq53
            )}
            href={"/#services"}
          >
            {"Services"}
          </a>
          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__wAmgt
            )}
            href={"/#work"}
          >
            {"Work"}
          </a>
          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link___1LSDb
            )}
            href={"/#about"}
          >
            {"About"}
          </a>
          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__m7Xj8
            )}
            href={"/#contact"}
          >
            {"Contact"}
          </a>
        </Stack__>
        <div className={classNames(projectcss.all, sty.columns__thCar)}>
          <div className={classNames(projectcss.all, sty.column__tUtaT)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lFiwc)}
            >
              <a
                aria-label={"Facebook"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__lFs3P
                )}
                href={"https://www.facebook.com"}
                target={"_blank"}
              >
                <FacebookIcon
                  data-plasmic-name={"svg"}
                  data-plasmic-override={overrides.svg}
                  className={classNames(projectcss.all, sty.svg)}
                  role={"img"}
                />
              </a>
              <a
                aria-label={"Instagram"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__iy2JJ
                )}
                href={"https://www.instagram.com"}
                target={"_blank"}
              >
                <PlasmicImg__
                  data-plasmic-name={"instapng"}
                  data-plasmic-override={overrides.instapng}
                  alt={""}
                  className={classNames(sty.instapng)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: group11PngAjmiXiFRilGg,
                    fullWidth: 326,
                    fullHeight: 326,
                    aspectRatio: undefined
                  }}
                />
              </a>
              <a
                aria-label={"Twitter"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__krs0
                )}
                href={"https://www.twitter.com"}
                target={"_blank"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___1DhR6)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: twitterpngOCmBfwqJpCYn,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />
              </a>
              <a
                aria-label={"Linkedin"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__galAl
                )}
                href={"https://www.linkedin.com"}
                target={"_blank"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yZuNe)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: linkedinpngSYuuOlmJn6Oy,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />
              </a>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.column__bUj1Z)}>
            <div className={classNames(projectcss.all, sty.freeBox__wc6Ly)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__zv5Xi)}
                displayHeight={"32px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"32px"}
                loading={"lazy"}
                src={{
                  src: image14De4VmsG29EdF,
                  fullWidth: 204,
                  fullHeight: 156,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mTacl
                )}
              >
                {"anna@design.com"}
              </div>
            </div>
          </div>
        </div>
      </Stack__>
      <div
        data-plasmic-name={"section"}
        data-plasmic-override={overrides.section}
        className={classNames(projectcss.all, sty.section)}
      >
        <div className={classNames(projectcss.all, sty.columns__lqFj2)}>
          <div className={classNames(projectcss.all, sty.column__hWmZd)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jlT6M
              )}
            >
              {"\u00a9 2030 Freelance Portfolio."}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column___3JuSy)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__inpSu
              )}
            >
              {"Built by Anna Wu"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__x9Xtz)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qLh8Z
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Made in Plasmic"
                : "Made in Plasmic"}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "links", "svg", "instapng", "section"],
  links: ["links", "svg", "instapng"],
  svg: ["svg"],
  instapng: ["instapng"],
  section: ["section"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    links: makeNodeComponent("links"),
    svg: makeNodeComponent("svg"),
    instapng: makeNodeComponent("instapng"),
    section: makeNodeComponent("section"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
